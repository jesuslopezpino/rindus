// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.rindus.microservicesdemo.service.impl;

import com.rindus.microservicesdemo.domain.CustomerOrder;
import com.rindus.microservicesdemo.domain.Sell;
import com.rindus.microservicesdemo.domain.Stock;
import com.rindus.microservicesdemo.repository.SellRepository;
import com.rindus.microservicesdemo.service.impl.SellServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect SellServiceImpl_Roo_Service_Impl {
    
    declare @type: SellServiceImpl: @Service;
    
    declare @type: SellServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private SellRepository SellServiceImpl.sellRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param sellRepository
     */
    @Autowired
    public SellServiceImpl.new(SellRepository sellRepository) {
        setSellRepository(sellRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return SellRepository
     */
    public SellRepository SellServiceImpl.getSellRepository() {
        return sellRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param sellRepository
     */
    public void SellServiceImpl.setSellRepository(SellRepository sellRepository) {
        this.sellRepository = sellRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param sell
     */
    @Transactional
    public void SellServiceImpl.delete(Sell sell) {
        // Clear bidirectional many-to-one child relationship with CustomerOrder
        if (sell.getCustomerOrder() != null) {
            sell.getCustomerOrder().getSellList().remove(sell);
        }
        
        // Clear bidirectional many-to-one child relationship with Stock
        if (sell.getStockItem() != null) {
            sell.getStockItem().getVentas().remove(sell);
        }
        
        getSellRepository().delete(sell);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Sell> SellServiceImpl.save(Iterable<Sell> entities) {
        return getSellRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void SellServiceImpl.delete(Iterable<Long> ids) {
        List<Sell> toDelete = getSellRepository().findAll(ids);
        getSellRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Sell
     */
    @Transactional
    public Sell SellServiceImpl.save(Sell entity) {
        return getSellRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Sell
     */
    public Sell SellServiceImpl.findOne(Long id) {
        return getSellRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Sell
     */
    public Sell SellServiceImpl.findOneForUpdate(Long id) {
        return getSellRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Sell> SellServiceImpl.findAll(Iterable<Long> ids) {
        return getSellRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Sell> SellServiceImpl.findAll() {
        return getSellRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long SellServiceImpl.count() {
        return getSellRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Sell> SellServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getSellRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Sell> SellServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getSellRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerOrder
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Sell> SellServiceImpl.findByCustomerOrder(CustomerOrder customerOrder, GlobalSearch globalSearch, Pageable pageable) {
        return getSellRepository().findByCustomerOrder(customerOrder, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param stockItem
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Sell> SellServiceImpl.findByStockItem(Stock stockItem, GlobalSearch globalSearch, Pageable pageable) {
        return getSellRepository().findByStockItem(stockItem, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerOrder
     * @return Long
     */
    public long SellServiceImpl.countByCustomerOrder(CustomerOrder customerOrder) {
        return getSellRepository().countByCustomerOrder(customerOrder);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param stockItem
     * @return Long
     */
    public long SellServiceImpl.countByStockItem(Stock stockItem) {
        return getSellRepository().countByStockItem(stockItem);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Sell> SellServiceImpl.getEntityType() {
        return Sell.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> SellServiceImpl.getIdType() {
        return Long.class;
    }
    
}
