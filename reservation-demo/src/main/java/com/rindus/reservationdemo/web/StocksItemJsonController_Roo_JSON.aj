// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.rindus.reservationdemo.web;

import com.rindus.reservationdemo.domain.Stock;
import com.rindus.reservationdemo.service.api.StockService;
import com.rindus.reservationdemo.web.StocksItemJsonController;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect StocksItemJsonController_Roo_JSON {
    
    declare @type: StocksItemJsonController: @RestController;
    
    declare @type: StocksItemJsonController: @RequestMapping(value = "/stocks/{stock}", name = "StocksItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param stockService
     */
    @Autowired
    public StocksItemJsonController.new(StockService stockService) {
        this.stockService = stockService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Stock
     */
    @ModelAttribute
    public Stock StocksItemJsonController.getStock(@PathVariable("stock") Long id) {
        Stock stock = stockService.findOne(id);
        if (stock == null) {
            throw new NotFoundException(String.format("Stock with identifier '%s' not found",id));
        }
        return stock;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param stock
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> StocksItemJsonController.show(@ModelAttribute Stock stock) {
        return ResponseEntity.ok(stock);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param stock
     * @return UriComponents
     */
    public static UriComponents StocksItemJsonController.showURI(Stock stock) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(StocksItemJsonController.class).show(stock))
            .buildAndExpand(stock.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedStock
     * @param stock
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> StocksItemJsonController.update(@ModelAttribute Stock storedStock, @Valid @RequestBody Stock stock, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        stock.setId(storedStock.getId());
        getStockService().save(stock);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param stock
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> StocksItemJsonController.delete(@ModelAttribute Stock stock) {
        getStockService().delete(stock);
        return ResponseEntity.ok().build();
    }
    
}
