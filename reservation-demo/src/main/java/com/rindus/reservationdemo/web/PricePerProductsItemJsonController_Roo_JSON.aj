// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.rindus.reservationdemo.web;

import com.rindus.reservationdemo.domain.PricePerProduct;
import com.rindus.reservationdemo.service.api.PricePerProductService;
import com.rindus.reservationdemo.web.PricePerProductsItemJsonController;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect PricePerProductsItemJsonController_Roo_JSON {
    
    declare @type: PricePerProductsItemJsonController: @RestController;
    
    declare @type: PricePerProductsItemJsonController: @RequestMapping(value = "/priceperproducts/{pricePerProduct}", name = "PricePerProductsItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param pricePerProductService
     */
    @Autowired
    public PricePerProductsItemJsonController.new(PricePerProductService pricePerProductService) {
        this.pricePerProductService = pricePerProductService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return PricePerProduct
     */
    @ModelAttribute
    public PricePerProduct PricePerProductsItemJsonController.getPricePerProduct(@PathVariable("pricePerProduct") Long id) {
        PricePerProduct pricePerProduct = pricePerProductService.findOne(id);
        if (pricePerProduct == null) {
            throw new NotFoundException(String.format("PricePerProduct with identifier '%s' not found",id));
        }
        return pricePerProduct;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param pricePerProduct
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> PricePerProductsItemJsonController.show(@ModelAttribute PricePerProduct pricePerProduct) {
        return ResponseEntity.ok(pricePerProduct);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param pricePerProduct
     * @return UriComponents
     */
    public static UriComponents PricePerProductsItemJsonController.showURI(PricePerProduct pricePerProduct) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(PricePerProductsItemJsonController.class).show(pricePerProduct))
            .buildAndExpand(pricePerProduct.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedPricePerProduct
     * @param pricePerProduct
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> PricePerProductsItemJsonController.update(@ModelAttribute PricePerProduct storedPricePerProduct, @Valid @RequestBody PricePerProduct pricePerProduct, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        pricePerProduct.setId(storedPricePerProduct.getId());
        getPricePerProductService().save(pricePerProduct);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param pricePerProduct
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> PricePerProductsItemJsonController.delete(@ModelAttribute PricePerProduct pricePerProduct) {
        getPricePerProductService().delete(pricePerProduct);
        return ResponseEntity.ok().build();
    }
    
}
