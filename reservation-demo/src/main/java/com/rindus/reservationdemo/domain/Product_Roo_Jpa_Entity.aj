// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.rindus.reservationdemo.domain;

import com.rindus.reservationdemo.domain.PricePerProduct;
import com.rindus.reservationdemo.domain.Product;
import com.rindus.reservationdemo.domain.Stock;
import io.springlets.format.EntityFormat;
import javax.persistence.Entity;
import org.springframework.util.Assert;

privileged aspect Product_Roo_Jpa_Entity {
    
    declare @type: Product: @Entity;
    
    declare @type: Product: @EntityFormat;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String Product.ITERABLE_TO_ADD_CANT_BE_NULL_MESSAGE = "The given Iterable of items to add can't be null!";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String Product.ITERABLE_TO_REMOVE_CANT_BE_NULL_MESSAGE = "The given Iterable of items to add can't be null!";
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param productosStockToAdd
     */
    public void Product.addToProductosStock(Iterable<Stock> productosStockToAdd) {
        Assert.notNull(productosStockToAdd, ITERABLE_TO_ADD_CANT_BE_NULL_MESSAGE);
        for (Stock item : productosStockToAdd) {
            this.productosStock.add(item);
            item.setProducto(this);
        }
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param productosStockToRemove
     */
    public void Product.removeFromProductosStock(Iterable<Stock> productosStockToRemove) {
        Assert.notNull(productosStockToRemove, ITERABLE_TO_REMOVE_CANT_BE_NULL_MESSAGE);
        for (Stock item : productosStockToRemove) {
            this.productosStock.remove(item);
            item.setProducto(null);
        }
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param preciosPorProductoToAdd
     */
    public void Product.addToPreciosPorProducto(Iterable<PricePerProduct> preciosPorProductoToAdd) {
        Assert.notNull(preciosPorProductoToAdd, ITERABLE_TO_ADD_CANT_BE_NULL_MESSAGE);
        for (PricePerProduct item : preciosPorProductoToAdd) {
            this.preciosPorProducto.add(item);
            item.setProducto(this);
        }
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param preciosPorProductoToRemove
     */
    public void Product.removeFromPreciosPorProducto(Iterable<PricePerProduct> preciosPorProductoToRemove) {
        Assert.notNull(preciosPorProductoToRemove, ITERABLE_TO_REMOVE_CANT_BE_NULL_MESSAGE);
        for (PricePerProduct item : preciosPorProductoToRemove) {
            this.preciosPorProducto.remove(item);
            item.setProducto(null);
        }
    }
    
}
