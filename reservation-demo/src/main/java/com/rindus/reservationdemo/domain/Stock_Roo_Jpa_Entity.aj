// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.rindus.reservationdemo.domain;

import com.rindus.reservationdemo.domain.PricePerProduct;
import com.rindus.reservationdemo.domain.Reservation;
import com.rindus.reservationdemo.domain.Sell;
import com.rindus.reservationdemo.domain.Stock;
import io.springlets.format.EntityFormat;
import javax.persistence.Entity;
import org.springframework.util.Assert;

privileged aspect Stock_Roo_Jpa_Entity {
    
    declare @type: Stock: @Entity;
    
    declare @type: Stock: @EntityFormat;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String Stock.ITERABLE_TO_ADD_CANT_BE_NULL_MESSAGE = "The given Iterable of items to add can't be null!";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String Stock.ITERABLE_TO_REMOVE_CANT_BE_NULL_MESSAGE = "The given Iterable of items to add can't be null!";
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param reservasToAdd
     */
    public void Stock.addToReservas(Iterable<Reservation> reservasToAdd) {
        Assert.notNull(reservasToAdd, ITERABLE_TO_ADD_CANT_BE_NULL_MESSAGE);
        for (Reservation item : reservasToAdd) {
            this.reservas.add(item);
            item.setStockItem(this);
        }
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param reservasToRemove
     */
    public void Stock.removeFromReservas(Iterable<Reservation> reservasToRemove) {
        Assert.notNull(reservasToRemove, ITERABLE_TO_REMOVE_CANT_BE_NULL_MESSAGE);
        for (Reservation item : reservasToRemove) {
            this.reservas.remove(item);
            item.setStockItem(null);
        }
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ventasToAdd
     */
    public void Stock.addToVentas(Iterable<Sell> ventasToAdd) {
        Assert.notNull(ventasToAdd, ITERABLE_TO_ADD_CANT_BE_NULL_MESSAGE);
        for (Sell item : ventasToAdd) {
            this.ventas.add(item);
            item.setStockItem(this);
        }
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ventasToRemove
     */
    public void Stock.removeFromVentas(Iterable<Sell> ventasToRemove) {
        Assert.notNull(ventasToRemove, ITERABLE_TO_REMOVE_CANT_BE_NULL_MESSAGE);
        for (Sell item : ventasToRemove) {
            this.ventas.remove(item);
            item.setStockItem(null);
        }
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param preciosVentaToAdd
     */
    public void Stock.addToPreciosVenta(Iterable<PricePerProduct> preciosVentaToAdd) {
        Assert.notNull(preciosVentaToAdd, ITERABLE_TO_ADD_CANT_BE_NULL_MESSAGE);
        for (PricePerProduct item : preciosVentaToAdd) {
            this.preciosVenta.add(item);
            item.setStockItem(this);
        }
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param preciosVentaToRemove
     */
    public void Stock.removeFromPreciosVenta(Iterable<PricePerProduct> preciosVentaToRemove) {
        Assert.notNull(preciosVentaToRemove, ITERABLE_TO_REMOVE_CANT_BE_NULL_MESSAGE);
        for (PricePerProduct item : preciosVentaToRemove) {
            this.preciosVenta.remove(item);
            item.setStockItem(null);
        }
    }
    
}
